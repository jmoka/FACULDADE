DDL (Data Definition Language):
A Linguagem de Definição de Dados (DDL) é usada para definir a estrutura do 
banco de dados, como a criação, alteração e exclusão de tabelas, índices e restrições.
===========================================================================================
Principais comandos DDL incluem:

CREATE TABLE: Usado para criar uma nova tabela no banco de dados.

- Exemplos Abaixo - copie cole para criar as tabelas

===========================================================================================

ALTER TABLE: Usado para modificar a estrutura de uma tabela existente (por exemplo, adicionar colunas).

	- ALTERAR A COLUNA DA TABELA 

	- ADICIONAR UMA COLUNA NA TABELA

			ALTER TABLE _nome_tabela_
			ADD nome_nova_coluna tipo;

		- EXEMPLO - Copie e Cole  e faça um teste

			ALTER TABLE senhas
			ADD Nova_Coluna VARCHAR(100);

			ALTER TABLE telefones
			ADD Nova_Coluna VARCHAR(20);
			
			ALTER TABLE tipo_end
			ADD Nome_Coluna INT;

	- ALTERAR O NOME DA COLUNA
		
		ALTER TABLE sua_tabela
		RENAME COLUMN nome_antigo TO nome_novo;
	
		- EXEMPLO - Copie e Cole  e faça um teste - vai trocar o nome Nome_Coluna ja cadastrado para Nome_Novo

			ALTER TABLE telefones
			RENAME COLUMN Nome_Coluna TO Nome_Novo;
			
			ALTER TABLE senhas
			RENAME COLUMN Nome_Coluna TO Nome_Novo;
			
			ALTER TABLE tipo_end
			RENAME COLUMN Nome_Coluna TO Nome_Novo;
	
	- DELETAR UMA COLUNA
	
		ALTER TABLE sua_tabela
		DROP COLUMN nome_coluna;
		
		- EXEMPLO - Copie e Cole  e faça um teste - vai deletar a coluna criada acima com o nome novo_nome

			ALTER TABLE telefones
			DROP COLUMN Nome_Novo;
			
			ALTER TABLE senhas
			DROP COLUMN Nome_Novo;
			
			ALTER TABLE tipo_end
			DROP COLUMN Nome_Novo;
======================================================================================================

DROP TABLE: Usado para excluir uma tabela do banco de dados.
	
	DROP TABLE compra;
	DROP TABLE endereco;
	DROP TABLE pessoa;
	DROP TABLE pf;
	DROP TABLE pj;
	DROP TABLE produtos;
	DROP TABLE senhas;
	DROP TABLE telefones;
	DROP TABLE tipo_end;
	DROP TABLE tipo_pessoa;
	DROP TABLE tipo_telefone;
	DROP TABLE tipo_usuario;
	DROP TABLE usuarios;
	DROP TABLE vendas;

=========================================================================

CREATE INDEX: Usado para criar índices para acelerar consultas.
O comando CREATE INDEX é usado em SQL para criar um índice em uma tabela de banco de dados. 
Um índice é uma estrutura de dados que melhora a eficiência das consultas em tabelas grandes. 
Ele permite que o sistema de gerenciamento de banco de dados (SGBD) encontre registros mais rapidamente, 
reduzindo o tempo necessário para realizar operações de busca e seleção.
	
	- A sintaxe básica do comando CREATE INDEX é a seguinte:

		CREATE INDEX nome_do_indice ON nome_da_tabela (nome_da_coluna);


	- INDEX NOME USER
		CREATE INDEX Index_Nome_User ON usuarios (nome);
	
	- INDEX PRODUTO
		CREATE INDEX Index_Nome_Produto ON produtos (nome);

	- INDEX PESSOA
		CREATE INDEX Index_Nome_Pessoa ON pessoas (nome);

	

============================================================================================

CREATE TABLE:

============================================================================================

CREATE TABLE compras (
  id_compra INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_comprador_user INTEGER UNSIGNED NOT NULL,
  id_fornecedor INTEGER UNSIGNED NOT NULL,
  data_compra DATE NULL,
  quant_comprada INTEGER UNSIGNED NULL,
  cod_produto INTEGER UNSIGNED NULL,
  obs VARCHAR(255) NULL,
  PRIMARY KEY(id_compra),
  INDEX compra_FKIndex1(id_fornecedor),
  INDEX compra_FKIndex2(id_comprador_user)
);

CREATE TABLE enderecos (
  id_end INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_user INTEGER UNSIGNED NOT NULL,
  id_tipo INTEGER UNSIGNED NULL DEFAULT NULL,
  endereco VARCHAR(255) NULL,
  n_end VARCHAR(10) NULL,
  bairro_end VARCHAR(45) NULL,
  cidade VARCHAR(45) NULL,
  uf VARCHAR(2) NULL,
  cep VARCHAR(45) NULL,
  PRIMARY KEY(id_end),
  INDEX endereco_FKIndex1(id_tipo),
  INDEX endereco_FKIndex2(id_user)
);

CREATE TABLE pessoas (
  id_pessoa INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_user INTEGER UNSIGNED NOT NULL,
  id_tipo INTEGER UNSIGNED NULL DEFAULT NULL,
  nome VARCHAR(255) NULL,
  PRIMARY KEY(id_pessoa),
  INDEX pessoa_FKIndex1(id_tipo),
  INDEX pessoa_FKIndex2(id_user)
);

CREATE TABLE pf (
  id_pf INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  cpf VARCHAR(255) NOT NULL,
  id_pessoa INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(id_pf),
  INDEX pf_FKIndex1(id_pessoa)
);

CREATE TABLE pj (
  id_pj INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  cnpj VARCHAR(255) NOT NULL,
  id_pessoa INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(id_pj),
  INDEX pj_FKIndex1(id_pessoa)
);

CREATE TABLE produtos (
  id_produto INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_fornecedor INTEGER UNSIGNED NULL DEFAULT NULL,
  id_user INTEGER UNSIGNED NOT NULL,
  nome VARCHAR(255) NOT NULL,
  quantidade INTEGER UNSIGNED NULL,
  preco_venda DECIMAL NULL,
  data_compra DATE NOT NULL,
  PRIMARY KEY(id_produto),
  INDEX Table_Produtos_FKIndex1(id_user),
  INDEX Table_Produtos_FKIndex2(id_fornecedor)
);

CREATE TABLE senhas (
  id_senha INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_user INTEGER UNSIGNED NOT NULL,
  senha VARCHAR(225) NOT NULL,
  login VARCHAR(255) NOT NULL,
  PRIMARY KEY(id_senha),
  INDEX senhas_FKIndex1(id_user)
);

CREATE TABLE telefones (
  id_telefone INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_user INTEGER UNSIGNED NOT NULL,
  id_tipo INTEGER UNSIGNED NOT NULL,
  numero VARCHAR(20) NULL,
  PRIMARY KEY(id_telefone),
  INDEX telefones_FKIndex3(id_tipo),
  INDEX telefones_FKIndex2(id_user)
);

CREATE TABLE tipo_end (
  id_tipo_end INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  nome INTEGER UNSIGNED NULL,
  PRIMARY KEY(id_tipo_end)
);

CREATE TABLE tipo_pessoas (
  id_tipo_pessoa INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  nome INTEGER UNSIGNED NULL,
  PRIMARY KEY(id_tipo_pessoa)
);

CREATE TABLE tipo_telefones (
  id_tipo_telefone INTEGER UNSIGNED NOT NULL,
  nome VARCHAR(255) NULL,
  PRIMARY KEY(id_tipo_telefone)
);

CREATE TABLE tipo_usuarios (
  id_tipo INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_user INTEGER UNSIGNED NOT NULL,
  nome VARCHAR(255) NOT NULL,
  PRIMARY KEY(id_tipo),
  INDEX tipo_usuario_FKIndex1(id_user)
);

CREATE TABLE usuarios (
  id_user INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_tipo INTEGER UNSIGNED NULL DEFAULT NULL,
  nome VARCHAR(255) NOT NULL,
  PRIMARY KEY(id_user),
  INDEX usuarios_FKIndex1(id_tipo)
);

CREATE TABLE vendas (
  id_venda INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
  id_consumidor_pj INTEGER UNSIGNED NULL DEFAULT NULL,
  id_consumidor_pf INTEGER UNSIGNED NULL DEFAULT NULL,
  id_vendedor INTEGER UNSIGNED NOT NULL,
  id_produto INTEGER UNSIGNED NOT NULL,
  quant_vendida INTEGER UNSIGNED NULL,
  data_venda DATE NULL,
  PRIMARY KEY(id_venda),
  INDEX Table_vendas_FKIndex1(id_produto),
  INDEX Table_vendas_FKIndex2(id_consumidor_pf),
  INDEX Table_vendas_FKIndex3(id_vendedor),
  INDEX Table_vendas_FKIndex4(id_consumidor_pj)
);

